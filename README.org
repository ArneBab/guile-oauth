
* guile-oauth

guile-oauth is a simple OAuth client module for Guile. It supports the
following features:

- OAuth 1.0 ([[http://tools.ietf.org/html/rfc5849][RFC 5849]]) protocol support.
- HTTP and HTTPS (needs guile-gnutls).
- HTTP methods: GET and POST.
- Signatures: HMAC-SHA1 and PLAINTEXT.

* Installation

guile-oauth is freely available for download under the terms of the GNU
Lesser General Public License version 3 (LGPLv3).

It depends on the following Guile version and modules:

- [[http://www.gnu.org/software/guile/][Guile]] >2.0.9.
- [[http://www.gnutls.org/][GnuTLS]] Guile bindings (for HTTPS support).
- [[http://weinholt.se/industria/industria.html][Industria]] (for HMAC-SHA1 signatures).

Clone the repository:

    : $ git clone https://github.com/aconchillo/guile-oauth.git

After cloning the repository:

    : $ autoreconf -vif
    : $ ./configure --prefix=<guile-prefix>
    : $ make
    : $ sudo make install

Where <guile-prefix> should preferably be the same as your system Guile
installation directory (e.g. /usr).

If everything installed successfully you should be up and running:

    : $ guile
    : scheme@(guile-user)> (use-modules (oauth oauth1))
    : scheme@(guile-user)>

It might be that you installed guile-oauth somewhere differently than
your system's Guile. If so, you need to indicate Guile where to find
guile-oauth, for example:

    : $ GUILE_LOAD_PATH=/usr/local/share/guile/site guile


* Example: Twitter client

- Load OAuth and JSON modules:

    : > (use-modules (oauth oauth1) (json))

- Define our Twitter URLs and application credentials:

    : > (define request-url "https://api.twitter.com/oauth/request_token")
    : > (define authorize-url "https://api.twitter.com/oauth/authorize")
    : > (define access-url "https://api.twitter.com/oauth/access_token")
    : > (define user-timeline "http://api.twitter.com/1.1/statuses/user_timeline.json")
    : > (define credentials (oauth1-credentials key secret))

  The /key/ and /secret/ are provided by Twitter once you register a
  new application.

- Obtain a request token:

    : > (define request-token (oauth1-client-request-token request-url credentials))

- Connect to the URL for authorizing the request token:

    : > (oauth1-client-authorize-url authorize-url request-token)

  Here you will need to login to Twitter or simply authorize your
  application if you are already logged in.

- Obtain the access token that will allow us to access protected resources:

    : > (define access-token (oauth1-client-access-token access-url credentials request-token verifier))

- Get your tweets:

    : > (define result (oauth1-client-request user-timeline credentials access-token)

- Parse your tweets with JSON and get a list of user/tweet pairs:

    : > (define tweets (json-string->scm result))
    : > (map (lambda (tweet) (cons (hash-ref tweet "user") (hash-ref twee "text"))) tweets)
